using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Enemy_behaviour : Monobehaviour {

#region Public Variables
public Transform rayCast;
public LayerMask raycastMask;
public float rayCastLength;
public float attackDistance; //Minimum distance for attack
public float moveSpeed;
public float timer; //Timer for cooldown between attacks 
#endregion

#region Private Variables
private RaycastHit2D hit;
private GameObject target;
private Animator anim;
private float distance; //Store the distance b/w enemy and player
private bool attackMode;
private bool inRange; //Check if player is in range
private bool cooling; //Check if Enemy is cooling after attack
#endregion


void Awake ()
{
    intTimer = timer; //Store the initial value of timer
    anim = GetComponent<Animator>();
}

void Update () {
    if (inRange) 
    {
       hit = Physiscs2D.Raycast(rayCast.position, Vector2.left, rayCastLength, raycastMask);
       RaycastDebugger();
    }
    
    //When Player is detected
    if(hit.collider != null)
    {
       EnemyLogic();
    }
    else if(hit.collider == null)
    {
       inRange = false;
    }
   
   if(inRange == false)
   {
      anim.setBool("canWalk", false);
      StopAttack();
   }
}

void OnTriggerEnter2D(Collider2D trig)
{
     if(trig.gameObject.tag == "Player")
     {
         target = trig.gameObject;
         inRange = true;
     }

}

void EnemyLogic()
{
    distance = Vector2.Distance(transform.position, target.transform.position);
    
    if(distance > attackDistance)
    {
       Move();\
       StopAttack();
    }
    else if(attackDistance >= distance && cooling == false)
    {
       Attack();
    }

    if(cooling)
    {
       Cooldown();
       anim.SetBool("Attack", false);
    }

}

void move()
{
  anim.SetBool("canWalk", true);
  
  if(!anim.GetCurrentAnimatorStateInfo(0).IsName("Enemy_attack"))
   {
      Vector2 targetPosition = new Vector2(target.transform.position.x, transform.position.y);
      
      transform.position = Vector2.MoveTowards(transform.position, targetposition, movespeed * Time.deltatTime);
   }
}

void Attack()
{
   timer = intTimer; //Reset Timer when Player enter Attack Range
   attackMode = true; //To check if Enemy can still attack or not
   
   anim.SetBool("canWalk", false);
   anim.SetBool("Attack", true);
}

void Cooldown()
{
   timer -= Time.deltaTime;
   
   if(timer <= 0 && cooling && attackMode)
   {
      cooling = false;
      timer = intTimer;
   }
}

void StopAttack()
{
    cooling = false;
    attackMode = false;
    anim.SetBool("Attack", false);
}

void RaycastDebugger()
 {
    if(distance > attackDistance)
    {
       Debug.DrawRay(rayCast.position, Vector2.left * rayCastLength, Color.red);
    }
    else if (attackDistance > distance)
    {
       Debug.DrawRay(rayCast.position, Vector2.left * rayCastLength, Color.green);
    }
 }

 public void TriggerCooling()
 {
    cooling = true;
 }
} 
